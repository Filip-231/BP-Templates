name: CD-Deliver
on:
  workflow_call:
  workflow_dispatch:


env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
#  deploy_testing:
#    name: Testing
#    environment:
#      name: Testing
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy
#        uses: fifsky/ssh-action@master
#        with:
#          command: |
#            sudo rm -rf ${{ github.event.repository.name }}/
#            git clone git@github.com:${{ github.actor }}/${{ github.event.repository.name }}.git
#            cd ${{ github.event.repository.name }}/
#            make down-volumes
#            sudo SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY_TO_REPO }}" SSH_PUBLIC_KEY="${{ secrets.SSH_PUBLIC_KEY_TO_REPO }}" docker-compose build
#            sudo ALLOWED_HOSTS=${{ secrets.TESTING_HOST_IP }} SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }} docker-compose up -d
##            make build SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY_TO_REPO }}" SSH_PUBLIC_KEY="${{ secrets.SSH_PUBLIC_KEY_TO_REPO }}"
##            make up ALLOWED_HOSTS=${{ secrets.TESTING_HOST_IP }} SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
#          host: ${{ secrets.TESTING_HOST_IP }}
#          user: ubuntu
#          key: ${{ secrets.TESTING_SSH_PRIVATE_KEY }}

  bump_version:
    name: Bump Version
    environment:
      name: Production
    runs-on: ubuntu-latest
#    needs: [ deploy_testing ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY_TO_REPO }}"

      - name: docker login
        run: echo "${{ secrets.PERSONAL_ACCESS_TOKEN }}" | docker login ghcr.io -u filip-231 --password-stdin # for image

      - name: authorise git
        run: make authorise USER=${{ github.actor }} EMAIL="${{ github.actor }}@users.noreply.github.com"

      - name: install packages
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: make install

      - name: bump version
        run: make bump

      - name: commit all changes
        run: make all

  publish_release:
    name: Publish Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.VERSION }}
    needs: [ bump_version ]
    steps:
      - uses: actions/checkout@v2

      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY_TO_REPO }}"

      - name: install packages
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: make install

      - name: authorise git
        run: make authorise USER=${{ github.actor }} EMAIL="${{ github.actor }}@users.noreply.github.com"

      - name: tag new version
        run: make tag

      - name: update changelog
        id: set_version
        run: |
          make changelog UNRELEASED=`cat VERSION`
          echo "VERSION=`cat VERSION`" >> $GITHUB_OUTPUT

      - name: commit all changes
        run: make all

      - name: publish release
        run: make release

  publish_package:
    name: Publish Package
    needs: [publish_release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=pep440,pattern={{raw}},value=${{ needs.publish_release.outputs.version }}
            type=ref,event=branch
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          build-args: |
            "ssh_prv_key=${{ secrets.SSH_PRIVATE_KEY_TO_REPO }}"
            "ssh_pub_key=${{ secrets.SSH_PUBLIC_KEY_TO_REPO }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_prod:
    name: Production
    needs: [ publish_release, publish_package ]
    environment:
      name: Production
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: fifsky/ssh-action@master
        with:
          command: |
            sudo rm -rf ${{ github.event.repository.name }}/
            git clone git@github.com:${{ github.actor }}/${{ github.event.repository.name }}.git
            cd ${{ github.event.repository.name }}/
            make down-volumes
            make build
            make up ALLOWED_HOSTS=${{ secrets.PRODUCTION_HOST_IP }} SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          host: ${{ secrets.PRODUCTION_HOST_IP }}
          user: ubuntu
          key: ${{ secrets.PRODUCTION_SSH_PRIVATE_KEY }}
